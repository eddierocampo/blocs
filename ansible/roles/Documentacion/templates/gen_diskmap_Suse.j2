#!/bin/bash

###############################################
### Levantamiento de Diskmapping Servidores ###
###############################################

mkdir -p {{ dirwrk }}
cat /dev/null > {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}

### Convierte a Mayusculas el Hostname """
host1=`echo {{ ansible_hostname }} | tr '[:lower:]' '[:upper:]'`

echo '' > {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo 'DISKMAPPING DEL SERVIDOR ' $host1 'PARA ENTREGA A PRODUCCION' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}

### Saca Informacion De Discos SO ###
cat /dev/null > {{ dirwrk }}/vgs.txt
pvs |awk '{print $2 ":" $1}' |grep -v PV >> {{ dirwrk }}/vgs.txt

echo 'OPERATING SYSTEM DISKS INFORMATION' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo 'DISK WWPN','DEVICE','VG NAME','MAJOR','MINOR','SIZE GB','OWNER','GROUP','PERMISSIONS' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}


cat /dev/null > {{ dirwrk }}/dsk.txt
for vg in `vgs |awk '{print $1}' |grep -v VG`
do
vgchk=`vgdisplay -v $vg |grep root |wc -l`
if [ $vgchk -ge 1 ]
	then 
	rootvg=`echo $vg`
        vgdisplay -v $vg |grep "PV Name" |awk '{print $3}' >> {{ dirwrk }}/dsk.txt
	for j in `cat {{ dirwrk }}/dsk.txt |awk '{print $1}'`
	do
                wwnso=`/usr/lib/udev/scsi_id --whitelisted --replace-whitespace --device=$j`
                if [ "$wwnso" = "" ]
                   then wwpnso='NA'
                   else wwpnso=`echo 'C'$wwnso`
                fi
                devso=`echo $j`
                size=`vgs |grep $rootvg |awk '{print $6}' |sed "s/<//g" |sed "s/g//g"`
                major=`ls -l $j |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $5}'`
                minor=`ls -l $j |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $6}'`
                vgname=`pvs | grep $j |awk '{print $2}'`
                perm=`ls -ld $j | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf("%0o ",k);print}' |awk '{print $1}'`
                owner=`ls -ld $j |awk '{print $3}'`
                grp=`ls -ld $j |awk '{print $4}'`
                echo $wwpnso,$devso,$vgname,$major,$minor,$size,$owner,$grp,$perm >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        done			
fi
done

# Saca Informacion de disco de Swap (Si es diferente al rootvg)
cat /dev/null >  {{ dirwrk }}/swdsk.txt
for swvg in `vgs |awk '{print $1}' |grep -v VG`
do
vgchk=`vgdisplay -v $swvg |grep swap |wc -l`
if [ $vgchk -ge 1 ]
	then 
	swapvg=`echo $swvg`
        if [ "$swapvg" != "$rootvg" ]
		then      
                vgdisplay -v $swapvg |grep "PV Name" |awk '{print $3}' >> {{ dirwrk }}/swdsk.txt
                for j in `cat {{ dirwrk }}/swdsk.txt |awk '{print $1}'`
                do
                wwnsw=`/usr/lib/udev/scsi_id --whitelisted --replace-whitespace --device=$j`
                if [ "$wwnsw" = "" ]
                   then wwpnsw='NA'
		   else wwpnsw=`echo 'C'$wwnsw`
                fi
                devso=`echo $j`
                size=`vgs |grep $swapvg |awk '{print $6}' |sed "s/<//g" |sed "s/g//g"`
                major=`ls -l $j |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $5}'`
                minor=`ls -l $j |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $6}'`
                vgname=`pvs | grep $j |awk '{print $2}'`
                perm=`ls -ld $j | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf("%0o ",k);print}' |awk '{print $1}'`
                owner=`ls -ld $j |awk '{print $3}'`
                grp=`ls -ld $j |awk '{print $4}'`
                echo $wwpnsw,$devso,$vgname,$major,$minor,$size,$owner,$grp,$perm >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
               	done                                           
	fi
fi
done

echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}

### Saca Informacion Discos APP ###

echo 'VOLUME GROUPS APP/DB DISK INFORMATION' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo 'DISK WWPN','DEVICE','VG NAME','MAJOR','MINOR','SIZE GB','OWNER','GROUP','PERMISSIONS' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}

#cat /dev/null > {{ dirwrk }}/vgs.txt
#pvs |awk '{print $2 ":" $1}' |grep -v PV >> {{ dirwrk }}/vgs.txt

for vg in `vgs |awk '{print $1}' |grep -v VG |grep -v root |grep -v swap`
do
cat /dev/null > {{ dirwrk }}/dskap.txt
#vgchk=`vgdisplay -v $vg |grep root |wc -l`
#if [ $vgchk = 0 ]
#        then
        appvg=`echo $vg`
        vgdisplay -v $vg |grep "PV Name" |awk '{print $3}' >> {{ dirwrk }}/dskap.txt
        for j in `cat {{ dirwrk }}/dskap.txt |awk '{print $1}'`
        do
                wwnapp=`/usr/lib/udev/scsi_id --whitelisted --replace-whitespace --device=$j`
                if [ "$wwnapp" = "" ]
                   then wwpnapp='NA'
	           else wwpnapp=`echo 'C'$wwnapp`
                fi
                devapp=`echo $j`
                size=`vgs |grep $appvg |awk '{print $6}' |sed "s/<//g" |sed "s/g//g"`
                major=`ls -l $j |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $5}'`
                minor=`ls -l $j |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $6}'`
                vgname=`pvs | grep $j |awk '{print $2}'`
                perm=`ls -ld $j | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf("%0o ",k);print}' |awk '{print $1}'`
                owner=`ls -ld $j |awk '{print $3}'`
                grp=`ls -ld $j |awk '{print $4}'`
                echo $wwpnapp,$devapp,$vgname,$major,$minor,$size,$owner,$grp,$perm >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        done
#fi
done

echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}

### Saca Informacion Filesystems ###

echo 'FILESYSTEMS INFORMATION' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo 'DATASTORE','HBAs','DISK WWPN','DISK','UDEV DEVICE','PARTITION','SIZE GB','VOLUME GROUP','LOGICAL VOLUME','FILESYSTEM','MOUNT POINT','OBJECTIVE' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}

cat /dev/null > {{ dirwrk }}/lvs.txt
cat /dev/null > {{ dirwrk }}/hba.txt

### Guarda Lista De lvs Activos ###
df -hlT |egrep -v 'tmpfs|Filesystem' >> {{ dirwrk }}/lvs.txt
#cat {{ dirwrk }}/lvs.txt

### Genera Listado HBAs Servidor
fc=`lspci |grep -o Fibre |head -n 1`

if [ "$fc" = "Fibre" ]
        then
                cat /sys/class/fc_host/host*/port_name >> {{ dirwrk }}/hba.txt
                cat `find {{ dirwrk }}/hba.txt` | tr '\n' ' ' > {{ dirwrk }}/hba_new.txt
                hbas=`cat {{ dirwrk }}/hba_new.txt`
        else
                hbas='NA'
fi
#echo $hbas

### kaca Informacion de Los Filesystems y genera Archivo ###

for j in `cat {{ dirwrk }}/lvs.txt |awk '{print $7}'`
do
        if [ "$j" != "/boot" ]
                then
			lv=`cat {{ dirwrk }}/lvs.txt |grep -iw $j |awk '{print $1}' |head -1`
                        vg=`lvs $lv |grep -v VG |awk '{print $2}'`
                        disk=`pvs |grep -iw $vg |awk '{print $1}'`
                        wwpnd=`/usr/lib/udev/scsi_id --whitelisted --replace-whitespace --device=$disk`
			if [ "$wwpnd" = '' ]
                                then wwpndsk='NA'
                                else wwpndsk=`echo 'C'$wwpnd`
			fi
                        fstype=`cat {{ dirwrk }}/lvs.txt |grep -iw $j |awk '{print $2}' |head -1`
                        pmont=`cat {{ dirwrk }}/lvs.txt |grep -iw $j |awk '{print $7}' |head -1`
                        psize=`cat {{ dirwrk }}/lvs.txt |grep -iw $j |awk '{print $3}' |sed 's/G//g' |head -1`
                        echo 'NA',$hbas,$wwpndsk,$disk,'NA',$j,$psize,$vg,$j,$fstype,$pmont,'Filesystem' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
                else
                        vg='NA'
                        disk=`df -hTP |grep -iw /boot |awk '{print $1}'`
                        wwpnd=$wwpnso
                        fstype=`cat {{ dirwrk }}/lvs.txt |grep -iw /boot |awk '{print $2}'`
                        pmont=`cat {{ dirwrk }}/lvs.txt |grep -iw /boot |awk '{print $7}'`
                        psize=`cat {{ dirwrk }}/lvs.txt |grep -iw /boot |awk '{print $3}' |sed 's/G//g'`
                        echo 'NA',$hbas,$wwpnd,$disk,'NA',$j,$psize,$vg,$j,$fstype,$pmont,'Filesystem' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        fi
done

echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}

### Toma De Informacion Discos GPFS

gpfs=`ls -l /usr/lpp/mmfs/bin/mmgetstate |awk '{print $9}'`

if [ "$gpfs" != "" ]
        then
        mmlsnsd -m |grep -v node |grep -v NSD |awk '{print $3}' | sed "s/dev//g" |sed "s/\///g" > {{ dirwrk }}/gpfs.txt
        echo 'GPFS DISKS INFORMATION' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        echo 'DISK WWPN','DEVICE','GPFS DEVICE','MAJOR','MINOR','SIZE MB','OWNER','GROUP','PERMISSIONS','USE' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        for i in `cat {{ dirwrk }}/gpfs.txt`
                       do
                                wwn=`/usr/lib/udev/scsi_id --whitelisted --replace-whitespace --device=$i`
                                if  [ "$wwn" = '' ]
                                        then wwpn='NA'
                                        else wwpn=`echo 'C'$wwn`
                                fi
                                dev=`echo $i`
                                size=
                                major=`ls -l $i |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $5}'`
                                minor=`ls -l $i |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $6}'`
                                perm=`ls -ld $asm | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf("%0o ",k);print}' |awk '{print $1}'`
                                owner=`ls -ld /dev/$i |awk '{print $3}'`
                                grp=`ls -ld /dev/$i |awk '{print $4}'`
                                gpfsd=`mmlsnsd -m |grep -v node |grep -v NSD |grep $i |awk '{print $1}'`
                echo $wwpn,$dev,$gpfsd,$major,$minor,$size,$owner,$grp,$perm,'GPFS' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
                done
fi

### Saca Informacion Discos ASM ###

pmon=`ps -fea |grep pmon |grep -i asm |awk '{print $8}'`

if [ "$pmon" != "" ]
        then
        touch {{ dirwrk }}/disks.txt
        cat /dev/null > {{ dirwrk }}/disks.txt
        ls -l /dev/sd* >> {{ dirwrk }}/disks.txt
        #touch {{ dirwrk }}/asm.txt
        #cat /dev/null > {{ dirwrk }}/asm.txt
        #ls -le /dev |grep grid |grep -v lv |grep -v vg |grep -v oracle |sed "s/,//g"|awk '{print $6 ":" $10}' >> {{ dirwrk }}/asm.txt
        echo 'ASM DISKS INFORMATION' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        echo 'DISK WWPN','DEVICE','LABEL/PATH','MAJOR','MINOR','SIZE MB','OWNER','GROUP','PERMISSIONS','USE' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        for i in `ls -l /dev/oracleasm/disks/* |awk '{print $10}'`
        do
		wwno=''
                wwno=`/usr/lib/udev/scsi_id --whitelisted --replace-whitespace --device=$i`
                if  [ "$wwno" = '' ]
                        then wwpno='NA'
                        else wwpno=`echo 'C'$wwno`
                fi
                asm=$i
                major=`ls -l $i |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $5}'`
                minor=`ls -l $i |sed "s/\/dev\// /g"|sed "s/,//g"|awk '{print $6}'`
                for j in `cat {{ dirwrk }}/disks.txt |awk '{print $6}'`
                        do
                        if [ "$minor" = "$j" ]
                                then
                                dev=`cat {{ dirwrk }}/disks.txt |grep -iw $j |awk '{print $10}' |head -1 |sed 's/1//g'`
                                size=`lsblk $dev |grep disk |grep -v NAME |awk '{print $4}' |sed 's/G//g'`
                        fi
                        done
                perm=`ls -ld $asm | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf("%0o ",k);print}' |awk '{print $1}'`
                owner=`ls -ld $asm |awk '{print $3}'`
                grp=`ls -ld $asm |awk '{print $4}'`
                echo $wwpno,$dev,$asm,$major,$minor,$size,$owner,$grp,$perm,'ASM' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
        done
fi

echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
echo '' >> {{ dirwrk }}/Diskmapping_ATH_{{ ansible_hostname }}
